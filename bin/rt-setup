#!/bin/bash

#desc# setup a new test

function usage {
	echo "usage:
   $0 -t testName {-i {pd|qa|local} | -e {vsc}} [-u testUser]
   $0 -I

   testName   eg. jj+test1, jj+mailtest, ... (CSRT_TEST_NAME)
   -i   initialize a new test (CSRT_API)
   -I   to initialize a new test when CSRT_API & CSRT_TEST_NAME are defined
   -e   launch editor (vsc)
   testUser   a, b or c (CSRT_TEST_USER)

   Env Vars
      CSRT_ROOT    $HOME/csrt-tests
"
	exit
}

function initialize_test {
	for user in a b c; do
		mkdir -p ${user}
		(cd ${user} && git clone git@github.com:jimmyjayp/regression-testing.git)
		cat $repoRoot/templates/user.vscode-workspace | sed -e "s|{{CSRT_ROOT}}|$CSRT_ROOT|g" | sed -e "s/{{CSRT_TEST_NAME}}/$CSRT_TEST_NAME/g" | sed -e "s/{{CSRT_API}}/$CSRT_API/g" | sed -e "s/{{TEST_USER}}/$user/g" >$user/code.code-workspace
	done
}

function cleanup_test {
	cd $CSRT_ROOT || exit 1
	/bin/rm -rf $CSRT_ROOT/$CSRT_TEST_NAME
	if [ "$CSRT_ENV" == "local"]; then
		/bin/bash --login -c "dt_load_playground api; node bin/cs_delete.js --team $CSRT_TEST_NAME --dtu"
	else
		echo "dt-ssh ${CSRT_ENV}*api web \". ~/.bash_profile; dt_load_playground api; node bin/cs_delete.js --team $CSRT_TEST_NAME --dtu\""
		dt-ssh ${CSRT_ENV}*api web ". ~/.bash_profile; dt_load_playground api; node bin/cs_delete.js --team $CSRT_TEST_NAME --dtu"
	fi
}

[ -z "$CSRT_ROOT" ] && export CSRT_ROOT=$HOME/csrt-tests
[ -z "$1" ] && usage
binDir=`dirname $0`
repoRoot=`(cd $binDir/.. && pwd)`
testAction=""
testUser=""
while getopts "t:i:u:e:cI" arg
do
	case $arg in
    I) testAction=init;;
	t) export CSRT_TEST_NAME=$OPTARG;;  # jj+test1
	i) testAction=init; export CSRT_ENV=$OPTARG;;
	e) testAction=ide; ide=$OPTARG;;
	u) export CSRT_TEST_USER=$OPTARG;;
	*) usage;;
	esac
done
shift `expr $OPTIND - 1`
[ -z "$CSRT_API" -o -z "$CSRT_TEST_NAME" -o -z "$testAction" ] && usage
[ "$CSRT_ENV" == pd ] && export CSRT_API=pd-api.codestream.us:9443
[ "$CSRT_ENV" == qa ] && export CSRT_API=qa-api.codestream.us
[ "$CSRT_ENV" == "local" ] && export CSRT_API=localhost.codestream.us:12079

[ ! -d $CSRT_ROOT/$CSRT_TEST_NAME ] && { echo mkdir -p $CSRT_ROOT/$CSRT_TEST_NAME && mkdir -p $CSRT_ROOT/$CSRT_TEST_NAME || exit 1; }
cd $CSRT_ROOT/$CSRT_TEST_NAME

[ $testAction == init ] && initialize_test
if [ $testAction == ide ]; then
	case "$ide" in
		vsc)
			wsFile=$CSRT_ROOT/$CSRT_TEST_NAME/$CSRT_TEST_USER/code.code-workspace
			[ ! -f $wsFile ] && echo "$wsFile not found" || { grep codestream\. $wsFile; echo code $wsFile; code $wsFile; };;
		*)
			[ -n "$ide" ] && echo "unknown ide $ide";;
	esac
fi
